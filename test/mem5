import AVFoundation

func printAudioCodec(fromVideoAt videoURL: URL) {
    let asset = AVURLAsset(url: videoURL)
    let assetReader: AVAssetReader
    
    do {
        assetReader = try AVAssetReader(asset: asset)
    } catch {
        print("Failed to initialize AVAssetReader: \(error)")
        return
    }
    
    guard let audioTrack = asset.tracks(withMediaType: .audio).first else {
        print("No audio track found in the video.")
        return
    }
    
    let outputSettings = [
        AVFormatIDKey: kAudioFormatLinearPCM
    ]
    
    let readerOutput = AVAssetReaderTrackOutput(track: audioTrack, outputSettings: outputSettings)
    assetReader.add(readerOutput)
    
    assetReader.startReading()
    
    guard let audioFormatDescription = audioTrack.formatDescriptions.first,
          let audioFormat = CMAudioFormatDescriptionGetStreamBasicDescription(audioFormatDescription)?.pointee else {
        print("Failed to retrieve audio format description.")
        return
    }
    
    let audioCodec = FourCharCode(bitPattern: audioFormat.mFormatID)
    print("Audio Codec: \(audioCodec)")
}
