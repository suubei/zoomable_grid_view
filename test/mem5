import AVFoundation

func convertAACtoLPCM(aacURL: URL, lpcmURL: URL, completion: @escaping (Bool) -> Void) {
    let inputFile: AVAudioFile
    do {
        inputFile = try AVAudioFile(forReading: aacURL)
    } catch {
        completion(false)
        return
    }

    let inputFormat = inputFile.fileFormat
    let outputFormat = AVAudioFormat(commonFormat: .pcmFormatInt16, sampleRate: inputFormat.sampleRate, channels: inputFormat.channelCount, interleaved: false)!

    guard let audioConverter = AVAudioConverter(from: inputFormat, to: outputFormat) else {
        completion(false)
        return
    }

    do {
        let outputFile = try AVAudioFile(forWriting: lpcmURL, settings: outputFormat.settings, commonFormat: outputFormat.commonFormat, interleaved: outputFormat.isInterleaved)

        let inputBuffer = AVAudioPCMBuffer(pcmFormat: inputFormat, frameCapacity: AVAudioFrameCount(inputFile.length))!
        try inputFile.read(into: inputBuffer)

        let outputBuffer = AVAudioPCMBuffer(pcmFormat: outputFormat, frameCapacity: AVAudioFrameCount(inputBuffer.frameCapacity))!

        while true {
            do {
                let status = try audioConverter.convert(to: outputBuffer, from: inputBuffer)

                if status == .error || status == .endOfStream {
                    break
                }

                try outputFile.write(from: outputBuffer)

                if status == .haveData {
                    outputBuffer.frameLength = outputBuffer.frameCapacity
                } else {
                    break
                }
            } catch {
                completion(false)
                return
            }
        }

        completion(true)
    } catch {
        completion(false)
    }
}

// Usage example
let aacURL = URL(fileURLWithPath: "/path/to/input.aac")
let lpcmURL = URL(fileURLWithPath: "/path/to/output.wav")

convertAACtoLPCM(aacURL: aacURL, lpcmURL: lpcmURL) { success in
    if success {
        print("Conversion successful!")
    } else {
        print("Conversion failed.")
    }
}
