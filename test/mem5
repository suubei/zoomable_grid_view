import AVFoundation

func getAudioMIMEAndConvertToAVFileType(inputPath: String) -> AVFileType? {
    let asset = AVAsset(url: URL(fileURLWithPath: inputPath))
    
    guard let audioTrack = asset.tracks(withMediaType: .audio).first else {
        print("No audio track found in the video.")
        return nil
    }
    
    let exportSession = AVAssetExportSession(asset: asset, presetName: AVAssetExportPresetPassthrough)
    
    guard let supportedFileTypes = exportSession?.supportedFileTypes else {
        print("Failed to retrieve supported file types.")
        return nil
    }
    
    for fileType in supportedFileTypes {
        let mimeType = AVFileType.getMIMEType(from: fileType)
        if mimeType == audioTrack.formatDescriptions.first?.formatDescriptionMimeType {
            return fileType
        }
    }
    
    print("No matching AVFileType found for the audio track's MIME type.")
    return nil
}

// 使用示例
let inputFilePath = "path/to/input/video.mp4"

if let audioFileType = getAudioMIMEAndConvertToAVFileType(inputPath: inputFilePath) {
    print("Audio MIME type: \(audioFileType.rawValue)")
    let avFileType = AVFileType(filenameExtension: audioFileType.rawValue)
    print("Converted AVFileType: \(avFileType.rawValue)")
} else {
    print("Failed to retrieve audio MIME type and convert to AVFileType.")
}
