import AVFoundation

import AVFoundation

func extractAudioFromVideo(inputPath: String, outputPath: String) -> Bool {
    let inputURL = URL(fileURLWithPath: inputPath)
    let outputURL = URL(fileURLWithPath: outputPath)

    // Create an AVAsset from the input video file
    let asset = AVAsset(url: inputURL)

    // Create an AVAssetExportSession with the desired output file type
    guard let exportSession = AVAssetExportSession(asset: asset, presetName: AVAssetExportPresetAppleM4A) else {
        print("Failed to create export session")
        return false
    }

    // Set the output URL and file type
    exportSession.outputURL = outputURL
    exportSession.outputFileType = .m4a

    // Get the audio track from the asset
    guard let audioTrack = asset.tracks(withMediaType: .audio).first else {
        print("No audio track found")
        return false
    }

    // Export the audio track asynchronously
    let exportSemaphore = DispatchSemaphore(value: 0)
    exportSession.exportAsynchronously {
        switch exportSession.status {
        case .completed:
            print("Audio extraction completed successfully")
            exportSemaphore.signal()
        case .failed, .cancelled, .unknown:
            if let error = exportSession.error {
                print("Audio extraction failed with error: \(error.localizedDescription)")
            } else {
                print("Audio extraction failed")
            }
            exportSemaphore.signal()
        default:
            break
        }
    }

    _ = exportSemaphore.wait(timeout: .distantFuture)

    return exportSession.status == .completed
}

// Usage example
let inputPath = "/path/to/input/video.mp4"
let outputPath = "/path/to/output/audio.m4a"

if extractAudioFromVideo(inputPath: inputPath, outputPath: outputPath) {
    print("Audio extraction completed")
} else {
    print("Audio extraction failed")
}


if decodeAACtoPCM(inputPath: inputPath, outputPath: outputPath) {
    print("AAC decoding to PCM completed")
} else {
    print("AAC decoding to PCM failed")
}
